/* tslint:disable */
/* eslint-disable */
/**
 * Mastercard Multi Token Network API
 * MTN (Multi Token Network) API is for customers and their consumers to - create account - buy/sell/hold cryptos - resolve alias and addresses - mint/transfer/burn tokenized deposits on blockchain
 *
 * The version of the OpenAPI document: 0.0.2
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MTNAliasBeneficiaryConsumer } from './MTNAliasBeneficiaryConsumer';
import {
    MTNAliasBeneficiaryConsumerFromJSON,
    MTNAliasBeneficiaryConsumerFromJSONTyped,
    MTNAliasBeneficiaryConsumerToJSON,
} from './MTNAliasBeneficiaryConsumer';
import type { MTNOriginatorConsumer } from './MTNOriginatorConsumer';
import {
    MTNOriginatorConsumerFromJSON,
    MTNOriginatorConsumerFromJSONTyped,
    MTNOriginatorConsumerToJSON,
} from './MTNOriginatorConsumer';
import type { MTNP2PInstruction } from './MTNP2PInstruction';
import {
    MTNP2PInstructionFromJSON,
    MTNP2PInstructionFromJSONTyped,
    MTNP2PInstructionToJSON,
} from './MTNP2PInstruction';
import type { MTNStatusReasonInformation } from './MTNStatusReasonInformation';
import {
    MTNStatusReasonInformationFromJSON,
    MTNStatusReasonInformationFromJSONTyped,
    MTNStatusReasonInformationToJSON,
} from './MTNStatusReasonInformation';

/**
 * 
 * @export
 * @interface MTNAccountResolutionP2PInstruction
 */
export interface MTNAccountResolutionP2PInstruction extends MTNP2PInstruction {
    /**
     * 
     * @type {MTNOriginatorConsumer}
     * @memberof MTNAccountResolutionP2PInstruction
     */
    originator?: MTNOriginatorConsumer;
    /**
     * 
     * @type {MTNAliasBeneficiaryConsumer}
     * @memberof MTNAccountResolutionP2PInstruction
     */
    beneficiary?: MTNAliasBeneficiaryConsumer;
    /**
     * The flag to show whether travel rule is required. Default - False.
     * @type {boolean}
     * @memberof MTNAccountResolutionP2PInstruction
     */
    travelRuleRequired?: boolean;
}

/**
 * Check if a given object implements the MTNAccountResolutionP2PInstruction interface.
 */
export function instanceOfMTNAccountResolutionP2PInstruction(value: object): boolean {
    return true;
}

export function MTNAccountResolutionP2PInstructionFromJSON(json: any): MTNAccountResolutionP2PInstruction {
    return MTNAccountResolutionP2PInstructionFromJSONTyped(json, false);
}

export function MTNAccountResolutionP2PInstructionFromJSONTyped(json: any, ignoreDiscriminator: boolean): MTNAccountResolutionP2PInstruction {
    if (json == null) {
        return json;
    }
    return {
        ...MTNP2PInstructionFromJSONTyped(json, ignoreDiscriminator),
        'originator': json['originator'] == null ? undefined : MTNOriginatorConsumerFromJSON(json['originator']),
        'beneficiary': json['beneficiary'] == null ? undefined : MTNAliasBeneficiaryConsumerFromJSON(json['beneficiary']),
        'travelRuleRequired': json['travelRuleRequired'] == null ? undefined : json['travelRuleRequired'],
    };
}

export function MTNAccountResolutionP2PInstructionToJSON(value?: Omit<MTNAccountResolutionP2PInstruction, 'travelRuleExchangeId'|'createdDate'|'updatedDate'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        ...MTNP2PInstructionToJSON(value),
        'originator': MTNOriginatorConsumerToJSON(value['originator']),
        'beneficiary': MTNAliasBeneficiaryConsumerToJSON(value['beneficiary']),
        'travelRuleRequired': value['travelRuleRequired'],
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * Mastercard Multi Token Network API
 * MTN (Multi Token Network) API is for customers and their consumers to - create account - buy/sell/hold cryptos - resolve alias and addresses - mint/transfer/burn tokenized deposits on blockchain
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MTNBlockchainTransaction } from './MTNBlockchainTransaction';
import {
    MTNBlockchainTransactionFromJSON,
    MTNBlockchainTransactionFromJSONTyped,
    MTNBlockchainTransactionToJSON,
} from './MTNBlockchainTransaction';
import type { MTNTokenIdentifier } from './MTNTokenIdentifier';
import {
    MTNTokenIdentifierFromJSON,
    MTNTokenIdentifierFromJSONTyped,
    MTNTokenIdentifierToJSON,
} from './MTNTokenIdentifier';
import type { MTNTokenizedDepositOperationInformation } from './MTNTokenizedDepositOperationInformation';
import {
    MTNTokenizedDepositOperationInformationFromJSON,
    MTNTokenizedDepositOperationInformationFromJSONTyped,
    MTNTokenizedDepositOperationInformationToJSON,
} from './MTNTokenizedDepositOperationInformation';

/**
 * A response body example to mint bank tokens.
 * @export
 * @interface MTNTokenizedMintOperationInformation
 */
export interface MTNTokenizedMintOperationInformation extends MTNTokenizedDepositOperationInformation {
    /**
     * Amount of minted tokens.
     * @type {number}
     * @memberof MTNTokenizedMintOperationInformation
     */
    amount?: number;
    /**
     * Consumer account identifier.
     * @type {string}
     * @memberof MTNTokenizedMintOperationInformation
     */
    to?: string;
}

/**
 * Check if a given object implements the MTNTokenizedMintOperationInformation interface.
 */
export function instanceOfMTNTokenizedMintOperationInformation(value: object): boolean {
    return true;
}

export function MTNTokenizedMintOperationInformationFromJSON(json: any): MTNTokenizedMintOperationInformation {
    return MTNTokenizedMintOperationInformationFromJSONTyped(json, false);
}

export function MTNTokenizedMintOperationInformationFromJSONTyped(json: any, ignoreDiscriminator: boolean): MTNTokenizedMintOperationInformation {
    if (json == null) {
        return json;
    }
    return {
        ...MTNTokenizedDepositOperationInformationFromJSONTyped(json, ignoreDiscriminator),
        'amount': json['amount'] == null ? undefined : json['amount'],
        'to': json['to'] == null ? undefined : json['to'],
    };
}

export function MTNTokenizedMintOperationInformationToJSON(value?: Omit<MTNTokenizedMintOperationInformation, 'operationId'|'status'|'blockchainTransactions'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        ...MTNTokenizedDepositOperationInformationToJSON(value),
        'amount': value['amount'],
        'to': value['to'],
    };
}


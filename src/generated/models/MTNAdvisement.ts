/* tslint:disable */
/* eslint-disable */
/**
 * Mastercard Multi Token Network API
 * MTN (Multi Token Network) API is for customers and their consumers to - create account - buy/sell/hold cryptos - resolve alias and addresses - mint/transfer/burn tokenized deposits on blockchain
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MTNClaim } from './MTNClaim';
import {
    MTNClaimFromJSON,
    MTNClaimFromJSONTyped,
    MTNClaimToJSON,
} from './MTNClaim';
import type { MTNObligation } from './MTNObligation';
import {
    MTNObligationFromJSON,
    MTNObligationFromJSONTyped,
    MTNObligationToJSON,
} from './MTNObligation';

/**
 * The Settlement Advisement for each currency.
 * @export
 * @interface MTNAdvisement
 */
export interface MTNAdvisement {
    /**
     * The currency associated with this advisement.
     * @type {string}
     * @memberof MTNAdvisement
     */
    currency?: string;
    /**
     * Sum of all the obligations present in the advisement.
     * @type {number}
     * @memberof MTNAdvisement
     */
    totalObligations?: number;
    /**
     * Sum of all the claims present in the advisement.
     * @type {number}
     * @memberof MTNAdvisement
     */
    totalClaims?: number;
    /**
     * Balance between the total obligations and the total claims.
     * @type {number}
     * @memberof MTNAdvisement
     */
    balance?: number;
    /**
     * List of obligations to a certain currency.
     * @type {Array<MTNObligation>}
     * @memberof MTNAdvisement
     */
    obligations?: Array<MTNObligation>;
    /**
     * List of claims to a certain currency.
     * @type {Array<MTNClaim>}
     * @memberof MTNAdvisement
     */
    claims?: Array<MTNClaim>;
}

/**
 * Check if a given object implements the MTNAdvisement interface.
 */
export function instanceOfMTNAdvisement(value: object): boolean {
    return true;
}

export function MTNAdvisementFromJSON(json: any): MTNAdvisement {
    return MTNAdvisementFromJSONTyped(json, false);
}

export function MTNAdvisementFromJSONTyped(json: any, ignoreDiscriminator: boolean): MTNAdvisement {
    if (json == null) {
        return json;
    }
    return {
        
        'currency': json['currency'] == null ? undefined : json['currency'],
        'totalObligations': json['totalObligations'] == null ? undefined : json['totalObligations'],
        'totalClaims': json['totalClaims'] == null ? undefined : json['totalClaims'],
        'balance': json['balance'] == null ? undefined : json['balance'],
        'obligations': json['obligations'] == null ? undefined : ((json['obligations'] as Array<any>).map(MTNObligationFromJSON)),
        'claims': json['claims'] == null ? undefined : ((json['claims'] as Array<any>).map(MTNClaimFromJSON)),
    };
}

export function MTNAdvisementToJSON(value?: MTNAdvisement | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'currency': value['currency'],
        'totalObligations': value['totalObligations'],
        'totalClaims': value['totalClaims'],
        'balance': value['balance'],
        'obligations': value['obligations'] == null ? undefined : ((value['obligations'] as Array<any>).map(MTNObligationToJSON)),
        'claims': value['claims'] == null ? undefined : ((value['claims'] as Array<any>).map(MTNClaimToJSON)),
    };
}


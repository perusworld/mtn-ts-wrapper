/* tslint:disable */
/* eslint-disable */
/**
 * Mastercard Multi Token Network API
 * MTN (Multi Token Network) API is for customers and their consumers to - create account - buy/sell/hold cryptos - resolve alias and addresses - mint/transfer/burn tokenized deposits on blockchain
 *
 * The version of the OpenAPI document: 0.0.2
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MTNAccountBalance } from './MTNAccountBalance';
import {
    MTNAccountBalanceFromJSON,
    MTNAccountBalanceFromJSONTyped,
    MTNAccountBalanceToJSON,
} from './MTNAccountBalance';

/**
 * Wrapper containing the Fiat Balances requests and its meta data
 * @export
 * @interface MTNFiatBalancesData
 */
export interface MTNFiatBalancesData {
    /**
     * The number of fiat balances returned as part of this request.
     * @type {number}
     * @memberof MTNFiatBalancesData
     */
    count?: number;
    /**
     * The list of Account Balances returned by the request.
     * @type {Array<MTNAccountBalance>}
     * @memberof MTNFiatBalancesData
     */
    items?: Array<MTNAccountBalance>;
}

/**
 * Check if a given object implements the MTNFiatBalancesData interface.
 */
export function instanceOfMTNFiatBalancesData(value: object): boolean {
    return true;
}

export function MTNFiatBalancesDataFromJSON(json: any): MTNFiatBalancesData {
    return MTNFiatBalancesDataFromJSONTyped(json, false);
}

export function MTNFiatBalancesDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): MTNFiatBalancesData {
    if (json == null) {
        return json;
    }
    return {
        
        'count': json['count'] == null ? undefined : json['count'],
        'items': json['items'] == null ? undefined : ((json['items'] as Array<any>).map(MTNAccountBalanceFromJSON)),
    };
}

export function MTNFiatBalancesDataToJSON(value?: MTNFiatBalancesData | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'count': value['count'],
        'items': value['items'] == null ? undefined : ((value['items'] as Array<any>).map(MTNAccountBalanceToJSON)),
    };
}


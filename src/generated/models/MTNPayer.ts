/* tslint:disable */
/* eslint-disable */
/**
 * Mastercard Multi Token Network API
 * MTN (Multi Token Network) API is for customers and their consumers to - create account - buy/sell/hold cryptos - resolve alias and addresses - mint/transfer/burn tokenized deposits on blockchain
 *
 * The version of the OpenAPI document: 0.0.2
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MTNDeposit } from './MTNDeposit';
import {
    MTNDepositFromJSON,
    MTNDepositFromJSONTyped,
    MTNDepositToJSON,
} from './MTNDeposit';
import type { MTNRefund } from './MTNRefund';
import {
    MTNRefundFromJSON,
    MTNRefundFromJSONTyped,
    MTNRefundToJSON,
} from './MTNRefund';

/**
 * Payer details to update or create for Earmark.
 * @export
 * @interface MTNPayer
 */
export interface MTNPayer {
    /**
     * Consumer account identifier.
     * @type {string}
     * @memberof MTNPayer
     */
    accountAlias?: string;
    /**
     * The amount of asset.
     * @type {number}
     * @memberof MTNPayer
     */
    amount?: number;
    /**
     * 
     * @type {Array<MTNDeposit>}
     * @memberof MTNPayer
     */
    deposits?: Array<MTNDeposit>;
    /**
     * 
     * @type {Array<MTNRefund>}
     * @memberof MTNPayer
     */
    refunds?: Array<MTNRefund>;
}

/**
 * Check if a given object implements the MTNPayer interface.
 */
export function instanceOfMTNPayer(value: object): boolean {
    return true;
}

export function MTNPayerFromJSON(json: any): MTNPayer {
    return MTNPayerFromJSONTyped(json, false);
}

export function MTNPayerFromJSONTyped(json: any, ignoreDiscriminator: boolean): MTNPayer {
    if (json == null) {
        return json;
    }
    return {
        
        'accountAlias': json['accountAlias'] == null ? undefined : json['accountAlias'],
        'amount': json['amount'] == null ? undefined : json['amount'],
        'deposits': json['deposits'] == null ? undefined : ((json['deposits'] as Array<any>).map(MTNDepositFromJSON)),
        'refunds': json['refunds'] == null ? undefined : ((json['refunds'] as Array<any>).map(MTNRefundFromJSON)),
    };
}

export function MTNPayerToJSON(value?: MTNPayer | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'accountAlias': value['accountAlias'],
        'amount': value['amount'],
        'deposits': value['deposits'] == null ? undefined : ((value['deposits'] as Array<any>).map(MTNDepositToJSON)),
        'refunds': value['refunds'] == null ? undefined : ((value['refunds'] as Array<any>).map(MTNRefundToJSON)),
    };
}


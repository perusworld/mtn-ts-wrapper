/* tslint:disable */
/* eslint-disable */
/**
 * Mastercard Multi Token Network API
 * MTN (Multi Token Network) API is for customers and their consumers to - create account - buy/sell/hold cryptos - resolve alias and addresses - mint/transfer/burn tokenized deposits on blockchain
 *
 * The version of the OpenAPI document: 0.0.2
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MTNFee } from './MTNFee';
import {
    MTNFeeFromJSON,
    MTNFeeFromJSONTyped,
    MTNFeeToJSON,
} from './MTNFee';

/**
 * Fiat Withdrawal transactions made by customer.
 * @export
 * @interface MTNFiatWithdrawal
 */
export interface MTNFiatWithdrawal {
    /**
     * An external Fiat Withdrawal identifier provided by the customer.
     * @type {string}
     * @memberof MTNFiatWithdrawal
     */
    externalReference?: string;
    /**
     * A unique identifier generated by Crypto Source.
     * @type {string}
     * @memberof MTNFiatWithdrawal
     */
    readonly fiatWithdrawalId?: string;
    /**
     * The fiat account identifier.
     * @type {string}
     * @memberof MTNFiatWithdrawal
     */
    fiatAccountId?: string;
    /**
     * The amount of the asset (fiat) to spend or acquire using the specified amount. The maximum precision is 8 decimals.
     * @type {number}
     * @memberof MTNFiatWithdrawal
     */
    amount: number;
    /**
     * A list of fees included as part of the fiat withdrawal.
     * @type {Array<MTNFee>}
     * @memberof MTNFiatWithdrawal
     */
    fees?: Array<MTNFee>;
    /**
     * The total amount requested for fiat withdrawal, including fees.
     * @type {number}
     * @memberof MTNFiatWithdrawal
     */
    total?: number;
    /**
     * Currency Code of funding account in service provider system . Valid values - USD
     * @type {string}
     * @memberof MTNFiatWithdrawal
     */
    fundingCurrency: string;
    /**
     * Indicates the status of a fiat withdrawal. Possible values include: - RECEIVED - PENDING - SUBMITTED - SUCCESS - REJECTED
     * @type {string}
     * @memberof MTNFiatWithdrawal
     */
    readonly status?: string;
    /**
     * Creation datetime in ISO8601 format
     * @type {Date}
     * @memberof MTNFiatWithdrawal
     */
    readonly createdDate?: Date;
    /**
     * Last updated datetime in ISO8601 format
     * @type {Date}
     * @memberof MTNFiatWithdrawal
     */
    readonly updatedDate?: Date;
}

/**
 * Check if a given object implements the MTNFiatWithdrawal interface.
 */
export function instanceOfMTNFiatWithdrawal(value: object): boolean {
    if (!('amount' in value)) return false;
    if (!('fundingCurrency' in value)) return false;
    return true;
}

export function MTNFiatWithdrawalFromJSON(json: any): MTNFiatWithdrawal {
    return MTNFiatWithdrawalFromJSONTyped(json, false);
}

export function MTNFiatWithdrawalFromJSONTyped(json: any, ignoreDiscriminator: boolean): MTNFiatWithdrawal {
    if (json == null) {
        return json;
    }
    return {
        
        'externalReference': json['externalReference'] == null ? undefined : json['externalReference'],
        'fiatWithdrawalId': json['fiatWithdrawalId'] == null ? undefined : json['fiatWithdrawalId'],
        'fiatAccountId': json['fiatAccountId'] == null ? undefined : json['fiatAccountId'],
        'amount': json['amount'],
        'fees': json['fees'] == null ? undefined : ((json['fees'] as Array<any>).map(MTNFeeFromJSON)),
        'total': json['total'] == null ? undefined : json['total'],
        'fundingCurrency': json['fundingCurrency'],
        'status': json['status'] == null ? undefined : json['status'],
        'createdDate': json['createdDate'] == null ? undefined : (new Date(json['createdDate'])),
        'updatedDate': json['updatedDate'] == null ? undefined : (new Date(json['updatedDate'])),
    };
}

export function MTNFiatWithdrawalToJSON(value?: Omit<MTNFiatWithdrawal, 'fiatWithdrawalId'|'status'|'createdDate'|'updatedDate'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'externalReference': value['externalReference'],
        'fiatAccountId': value['fiatAccountId'],
        'amount': value['amount'],
        'fees': value['fees'] == null ? undefined : ((value['fees'] as Array<any>).map(MTNFeeToJSON)),
        'total': value['total'],
        'fundingCurrency': value['fundingCurrency'],
    };
}


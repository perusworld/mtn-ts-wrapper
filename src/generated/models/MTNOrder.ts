/* tslint:disable */
/* eslint-disable */
/**
 * Mastercard Multi Token Network API
 * MTN (Multi Token Network) API is for customers and their consumers to - create account - buy/sell/hold cryptos - resolve alias and addresses - mint/transfer/burn tokenized deposits on blockchain
 *
 * The version of the OpenAPI document: 0.0.2
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MTNBuyOrder } from './MTNBuyOrder';
import {
    MTNBuyOrderFromJSON,
    MTNBuyOrderFromJSONTyped,
    MTNBuyOrderToJSON,
} from './MTNBuyOrder';
import type { MTNQuoteOrder } from './MTNQuoteOrder';
import {
    MTNQuoteOrderFromJSON,
    MTNQuoteOrderFromJSONTyped,
    MTNQuoteOrderToJSON,
} from './MTNQuoteOrder';
import type { MTNSellOrder } from './MTNSellOrder';
import {
    MTNSellOrderFromJSON,
    MTNSellOrderFromJSONTyped,
    MTNSellOrderToJSON,
} from './MTNSellOrder';

/**
 * Order transactions made with an Account
 * @export
 * @interface MTNOrder
 */
export interface MTNOrder {
    /**
     * An external identifier provided by a Customer
     * @type {string}
     * @memberof MTNOrder
     */
    externalReference?: string;
    /**
     * Unique order identifier
     * @type {string}
     * @memberof MTNOrder
     */
    readonly orderId?: string;
    /**
     * Consumer account identifier.
     * @type {string}
     * @memberof MTNOrder
     */
    accountAlias: string;
    /**
     * Indicates the status of an order
     * @type {string}
     * @memberof MTNOrder
     */
    readonly status?: string;
    /**
     * Side of the order (buy/sell)
     * @type {string}
     * @memberof MTNOrder
     */
    side?: string;
    /**
     * Type of the order (market/quote)
     * @type {string}
     * @memberof MTNOrder
     */
    type: string;
    /**
     * 
     * @type {MTNBuyOrder}
     * @memberof MTNOrder
     */
    buy?: MTNBuyOrder;
    /**
     * 
     * @type {MTNSellOrder}
     * @memberof MTNOrder
     */
    sell?: MTNSellOrder;
    /**
     * 
     * @type {MTNQuoteOrder}
     * @memberof MTNOrder
     */
    quote?: MTNQuoteOrder;
    /**
     * Settled datetime in ISO8601 format
     * @type {Date}
     * @memberof MTNOrder
     */
    readonly settledDate?: Date;
    /**
     * Creation datetime in ISO8601 format
     * @type {Date}
     * @memberof MTNOrder
     */
    readonly createdDate?: Date;
    /**
     * Last updated datetime in ISO8601 format
     * @type {Date}
     * @memberof MTNOrder
     */
    readonly updatedDate?: Date;
}

/**
 * Check if a given object implements the MTNOrder interface.
 */
export function instanceOfMTNOrder(value: object): boolean {
    if (!('accountAlias' in value)) return false;
    if (!('type' in value)) return false;
    return true;
}

export function MTNOrderFromJSON(json: any): MTNOrder {
    return MTNOrderFromJSONTyped(json, false);
}

export function MTNOrderFromJSONTyped(json: any, ignoreDiscriminator: boolean): MTNOrder {
    if (json == null) {
        return json;
    }
    return {
        
        'externalReference': json['externalReference'] == null ? undefined : json['externalReference'],
        'orderId': json['orderId'] == null ? undefined : json['orderId'],
        'accountAlias': json['accountAlias'],
        'status': json['status'] == null ? undefined : json['status'],
        'side': json['side'] == null ? undefined : json['side'],
        'type': json['type'],
        'buy': json['buy'] == null ? undefined : MTNBuyOrderFromJSON(json['buy']),
        'sell': json['sell'] == null ? undefined : MTNSellOrderFromJSON(json['sell']),
        'quote': json['quote'] == null ? undefined : MTNQuoteOrderFromJSON(json['quote']),
        'settledDate': json['settledDate'] == null ? undefined : (new Date(json['settledDate'])),
        'createdDate': json['createdDate'] == null ? undefined : (new Date(json['createdDate'])),
        'updatedDate': json['updatedDate'] == null ? undefined : (new Date(json['updatedDate'])),
    };
}

export function MTNOrderToJSON(value?: Omit<MTNOrder, 'orderId'|'status'|'settledDate'|'createdDate'|'updatedDate'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'externalReference': value['externalReference'],
        'accountAlias': value['accountAlias'],
        'side': value['side'],
        'type': value['type'],
        'buy': MTNBuyOrderToJSON(value['buy']),
        'sell': MTNSellOrderToJSON(value['sell']),
        'quote': MTNQuoteOrderToJSON(value['quote']),
    };
}


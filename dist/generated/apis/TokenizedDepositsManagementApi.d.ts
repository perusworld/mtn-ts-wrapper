/**
 * Mastercard Multi Token Network API
 * MTN (Multi Token Network) API is for customers and their consumers to - create account - buy/sell/hold cryptos - resolve alias and addresses - mint/transfer/burn tokenized deposits on blockchain
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { MTNTokenizedBurnOperation, MTNTokenizedBurnOperationInformation, MTNTokenizedDepositBalance, MTNTokenizedDepositOperationInformation, MTNTokenizedMintOperation, MTNTokenizedMintOperationInformation, MTNTokenizedTransferOperation, MTNTokenizedTransferOperationInformation, MTNTotalTokenSupply } from '../models/index';
export interface GetTokenBalancesRequest {
    ica: string;
    currency: string;
    mTNTokenizedDepositBalance: Omit<MTNTokenizedDepositBalance, 'balance'>;
}
export interface GetTokenOperationRequest {
    ica: string;
    operationId: string;
}
export interface GetTotalSupplyRequest {
    ica: string;
    currency: string;
    mTNTotalTokenSupply: Omit<MTNTotalTokenSupply, 'balance'>;
}
export interface SubmitBurnOperationRequest {
    ica: string;
    currency: string;
    idempotencyKey: string;
    mTNTokenizedBurnOperation: MTNTokenizedBurnOperation;
}
export interface SubmitMintOperationRequest {
    ica: string;
    currency: string;
    idempotencyKey: string;
    mTNTokenizedMintOperation: MTNTokenizedMintOperation;
}
export interface SubmitTransferOperationRequest {
    ica: string;
    currency: string;
    idempotencyKey: string;
    mTNTokenizedTransferOperation: MTNTokenizedTransferOperation;
}
/**
 *
 */
export declare class TokenizedDepositsManagementApi extends runtime.BaseAPI {
    /**
     * This endpoint allows a consumer to retrieve the token balance for any crypto address. Request is expected to be encrypted.
     * Retrieve token balance.
     */
    getTokenBalancesRaw(requestParameters: GetTokenBalancesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MTNTokenizedDepositBalance>>;
    /**
     * This endpoint allows a consumer to retrieve the token balance for any crypto address. Request is expected to be encrypted.
     * Retrieve token balance.
     */
    getTokenBalances(requestParameters: GetTokenBalancesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MTNTokenizedDepositBalance>;
    /**
     * This endpoint allows a consumer to retrieve details of a tokenized deposits operation. Response is expected to be encrypted.
     * Retrieve details of tokenized deposits operation.
     */
    getTokenOperationRaw(requestParameters: GetTokenOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MTNTokenizedDepositOperationInformation>>;
    /**
     * This endpoint allows a consumer to retrieve details of a tokenized deposits operation. Response is expected to be encrypted.
     * Retrieve details of tokenized deposits operation.
     */
    getTokenOperation(requestParameters: GetTokenOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MTNTokenizedDepositOperationInformation>;
    /**
     * This endpoint allows a consumer to retrieve the total supply of tokens. Request is expected to be encrypted.
     * Retrieve total supply of tokens.
     */
    getTotalSupplyRaw(requestParameters: GetTotalSupplyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MTNTotalTokenSupply>>;
    /**
     * This endpoint allows a consumer to retrieve the total supply of tokens. Request is expected to be encrypted.
     * Retrieve total supply of tokens.
     */
    getTotalSupply(requestParameters: GetTotalSupplyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MTNTotalTokenSupply>;
    /**
     * This endpoint allows a consumer to submit a tokenized deposits burn operation. Request and response are expected to be encrypted.
     * Submit a tokenized deposits burn operation.
     */
    submitBurnOperationRaw(requestParameters: SubmitBurnOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MTNTokenizedBurnOperationInformation>>;
    /**
     * This endpoint allows a consumer to submit a tokenized deposits burn operation. Request and response are expected to be encrypted.
     * Submit a tokenized deposits burn operation.
     */
    submitBurnOperation(requestParameters: SubmitBurnOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MTNTokenizedBurnOperationInformation>;
    /**
     * This endpoint allows a consumer to submit a tokenized deposits mint operation. Request and response are expected to be encrypted.
     * Submit a tokenized deposits mint operation.
     */
    submitMintOperationRaw(requestParameters: SubmitMintOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MTNTokenizedMintOperationInformation>>;
    /**
     * This endpoint allows a consumer to submit a tokenized deposits mint operation. Request and response are expected to be encrypted.
     * Submit a tokenized deposits mint operation.
     */
    submitMintOperation(requestParameters: SubmitMintOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MTNTokenizedMintOperationInformation>;
    /**
     * This endpoint allows a consumer to submit a tokenized deposits transfer operation. Request and response are expected to be encrypted.
     * Submit a tokenized deposits transfer operation.
     */
    submitTransferOperationRaw(requestParameters: SubmitTransferOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MTNTokenizedTransferOperationInformation>>;
    /**
     * This endpoint allows a consumer to submit a tokenized deposits transfer operation. Request and response are expected to be encrypted.
     * Submit a tokenized deposits transfer operation.
     */
    submitTransferOperation(requestParameters: SubmitTransferOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MTNTokenizedTransferOperationInformation>;
}

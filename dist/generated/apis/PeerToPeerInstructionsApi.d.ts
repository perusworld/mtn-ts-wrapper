/**
 * Mastercard Multi Token Network API
 * MTN (Multi Token Network) API is for customers and their consumers to - create account - buy/sell/hold cryptos - resolve alias and addresses - mint/transfer/burn tokenized deposits on blockchain
 *
 * The version of the OpenAPI document: 0.0.2
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { MTNP2PInstruction, MTNP2PInstructions } from '../models/index';
export interface GetP2PInstructionRequestRequest {
    ica: string;
    instructionId: string;
}
export interface GetP2PInstructionRequestsRequest {
    ica: string;
    status?: string;
    offset?: number;
    limit?: number;
    sort?: string;
    requestType?: string;
}
export interface ResolveP2PInstructionRequestRequest {
    ica: string;
    mTNP2PInstruction: Omit<MTNP2PInstruction, 'travelRuleExchangeId' | 'createdDate' | 'updatedDate'>;
}
export interface UpdateP2PInstructionRequestRequest {
    ica: string;
    instructionId: string;
    mTNP2PInstruction: Omit<MTNP2PInstruction, 'travelRuleExchangeId' | 'createdDate' | 'updatedDate'>;
}
/**
 *
 */
export declare class PeerToPeerInstructionsApi extends runtime.BaseAPI {
    /**
     * This endpoint allows for retrieving details of a P2P instruction request. Response is expected to be encrypted.
     * Retrieve a P2P instruction request.
     */
    getP2PInstructionRequestRaw(requestParameters: GetP2PInstructionRequestRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MTNP2PInstruction>>;
    /**
     * This endpoint allows for retrieving details of a P2P instruction request. Response is expected to be encrypted.
     * Retrieve a P2P instruction request.
     */
    getP2PInstructionRequest(requestParameters: GetP2PInstructionRequestRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MTNP2PInstruction>;
    /**
     * This endpoint allows for retrieving a list of P2P Instruction requests where the calling VASP is the beneficiary. Response is expected to be encrypted.
     * Retrieve P2P Instruction requests.
     */
    getP2PInstructionRequestsRaw(requestParameters: GetP2PInstructionRequestsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MTNP2PInstructions>>;
    /**
     * This endpoint allows for retrieving a list of P2P Instruction requests where the calling VASP is the beneficiary. Response is expected to be encrypted.
     * Retrieve P2P Instruction requests.
     */
    getP2PInstructionRequests(requestParameters: GetP2PInstructionRequestsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MTNP2PInstructions>;
    /**
     * This endpoint allows for creating an instruction to resolve crypto address and attestation for sending and receiving account aliases. Request and response are expected to be encrypted.
     * Creates a P2P instruction request.
     */
    resolveP2PInstructionRequestRaw(requestParameters: ResolveP2PInstructionRequestRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MTNP2PInstruction>>;
    /**
     * This endpoint allows for creating an instruction to resolve crypto address and attestation for sending and receiving account aliases. Request and response are expected to be encrypted.
     * Creates a P2P instruction request.
     */
    resolveP2PInstructionRequest(requestParameters: ResolveP2PInstructionRequestRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MTNP2PInstruction>;
    /**
     * Endpoint to update the P2P instruction request status and provide originator and beneficiary details at different states. Request is expected to be encrypted.
     * Update a P2P instruction request.
     */
    updateP2PInstructionRequestRaw(requestParameters: UpdateP2PInstructionRequestRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Endpoint to update the P2P instruction request status and provide originator and beneficiary details at different states. Request is expected to be encrypted.
     * Update a P2P instruction request.
     */
    updateP2PInstructionRequest(requestParameters: UpdateP2PInstructionRequestRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
}

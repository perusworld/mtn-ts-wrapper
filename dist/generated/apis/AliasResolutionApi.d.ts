/**
 * Mastercard Multi Token Network API
 * MTN (Multi Token Network) API is for customers and their consumers to - create account - buy/sell/hold cryptos - resolve alias and addresses - mint/transfer/burn tokenized deposits on blockchain
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { MTNAccountResolution, MTNAccountResolutions } from '../models/index';
export interface GetAliasResolutionRequestRequest {
    ica: string;
    requestId: string;
}
export interface GetAliasResolutionRequestsRequest {
    ica: string;
    status?: string;
    offset?: number;
    limit?: number;
    sort?: string;
}
export interface ResolveAccountAliasRequest {
    ica: string;
    mTNAccountResolution: Omit<MTNAccountResolution, 'travelRuleTransferId' | 'createdDate' | 'updatedDate'>;
}
export interface UpdateAccountResolutionRequestRequest {
    ica: string;
    requestId: string;
    mTNAccountResolution: Omit<MTNAccountResolution, 'travelRuleTransferId' | 'createdDate' | 'updatedDate'>;
}
/**
 *
 */
export declare class AliasResolutionApi extends runtime.BaseAPI {
    /**
     * This endpoint allows for retrieving details of an account resolution request. Response is expected to be encrypted.
     * Retrieve an account resolution request.
     */
    getAliasResolutionRequestRaw(requestParameters: GetAliasResolutionRequestRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MTNAccountResolution>>;
    /**
     * This endpoint allows for retrieving details of an account resolution request. Response is expected to be encrypted.
     * Retrieve an account resolution request.
     */
    getAliasResolutionRequest(requestParameters: GetAliasResolutionRequestRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MTNAccountResolution>;
    /**
     * This endpoint allows for retrieving a list of account resolution requests where the calling VASP is the beneficiary. Response is expected to be encrypted.
     * Retrieve account resolution requests.
     */
    getAliasResolutionRequestsRaw(requestParameters: GetAliasResolutionRequestsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MTNAccountResolutions>>;
    /**
     * This endpoint allows for retrieving a list of account resolution requests where the calling VASP is the beneficiary. Response is expected to be encrypted.
     * Retrieve account resolution requests.
     */
    getAliasResolutionRequests(requestParameters: GetAliasResolutionRequestsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MTNAccountResolutions>;
    /**
     * This endpoint allows for creating a request to resolve crypto address for a given account alias. Request and response are expected to be encrypted.
     * Creates an account resolution request.
     */
    resolveAccountAliasRaw(requestParameters: ResolveAccountAliasRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MTNAccountResolution>>;
    /**
     * This endpoint allows for creating a request to resolve crypto address for a given account alias. Request and response are expected to be encrypted.
     * Creates an account resolution request.
     */
    resolveAccountAlias(requestParameters: ResolveAccountAliasRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MTNAccountResolution>;
    /**
     * Endpoint to update the account resolution request status and provide originator and beneficiary details at different states. Request is expected to be encrypted.
     * Update an account resolution request.
     */
    updateAccountResolutionRequestRaw(requestParameters: UpdateAccountResolutionRequestRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Endpoint to update the account resolution request status and provide originator and beneficiary details at different states. Request is expected to be encrypted.
     * Update an account resolution request.
     */
    updateAccountResolutionRequest(requestParameters: UpdateAccountResolutionRequestRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
}

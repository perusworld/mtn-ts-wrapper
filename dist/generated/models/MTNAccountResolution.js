"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Mastercard Multi Token Network API
 * MTN (Multi Token Network) API is for customers and their consumers to - create account - buy/sell/hold cryptos - resolve alias and addresses - mint/transfer/burn tokenized deposits on blockchain
 *
 * The version of the OpenAPI document: 0.0.2
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MTNAccountResolutionToJSON = exports.MTNAccountResolutionFromJSONTyped = exports.MTNAccountResolutionFromJSON = exports.instanceOfMTNAccountResolution = void 0;
const MTNConsumer_1 = require("./MTNConsumer");
const MTNStatusReasonInformation_1 = require("./MTNStatusReasonInformation");
/**
 * Check if a given object implements the MTNAccountResolution interface.
 */
function instanceOfMTNAccountResolution(value) {
    return true;
}
exports.instanceOfMTNAccountResolution = instanceOfMTNAccountResolution;
function MTNAccountResolutionFromJSON(json) {
    return MTNAccountResolutionFromJSONTyped(json, false);
}
exports.MTNAccountResolutionFromJSON = MTNAccountResolutionFromJSON;
function MTNAccountResolutionFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'requestId': json['requestId'] == null ? undefined : json['requestId'],
        'originator': json['originator'] == null ? undefined : (0, MTNConsumer_1.MTNConsumerFromJSON)(json['originator']),
        'beneficiary': json['beneficiary'] == null ? undefined : (0, MTNConsumer_1.MTNConsumerFromJSON)(json['beneficiary']),
        'quantity': json['quantity'] == null ? undefined : json['quantity'],
        'status': json['status'] == null ? undefined : json['status'],
        'statusReasonInformation': json['statusReasonInformation'] == null ? undefined : (json['statusReasonInformation'].map(MTNStatusReasonInformation_1.MTNStatusReasonInformationFromJSON)),
        'blockchainTxnHash': json['blockchainTxnHash'] == null ? undefined : json['blockchainTxnHash'],
        'travelRuleRequired': json['travelRuleRequired'] == null ? undefined : json['travelRuleRequired'],
        'travelRuleTransferId': json['travelRuleTransferId'] == null ? undefined : json['travelRuleTransferId'],
        'createdDate': json['createdDate'] == null ? undefined : (new Date(json['createdDate'])),
        'updatedDate': json['updatedDate'] == null ? undefined : (new Date(json['updatedDate'])),
    };
}
exports.MTNAccountResolutionFromJSONTyped = MTNAccountResolutionFromJSONTyped;
function MTNAccountResolutionToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        'requestId': value['requestId'],
        'originator': (0, MTNConsumer_1.MTNConsumerToJSON)(value['originator']),
        'beneficiary': (0, MTNConsumer_1.MTNConsumerToJSON)(value['beneficiary']),
        'quantity': value['quantity'],
        'status': value['status'],
        'statusReasonInformation': value['statusReasonInformation'] == null ? undefined : (value['statusReasonInformation'].map(MTNStatusReasonInformation_1.MTNStatusReasonInformationToJSON)),
        'blockchainTxnHash': value['blockchainTxnHash'],
        'travelRuleRequired': value['travelRuleRequired'],
    };
}
exports.MTNAccountResolutionToJSON = MTNAccountResolutionToJSON;
//# sourceMappingURL=MTNAccountResolution.js.map
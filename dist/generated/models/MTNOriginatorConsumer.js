"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Mastercard Multi Token Network API
 * MTN (Multi Token Network) API is for customers and their consumers to - create account - buy/sell/hold cryptos - resolve alias and addresses - mint/transfer/burn tokenized deposits on blockchain
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MTNOriginatorConsumerToJSON = exports.MTNOriginatorConsumerFromJSONTyped = exports.MTNOriginatorConsumerFromJSON = exports.instanceOfMTNOriginatorConsumer = void 0;
const MTNCryptoAddressRiskScore_1 = require("./MTNCryptoAddressRiskScore");
/**
 * Check if a given object implements the MTNOriginatorConsumer interface.
 */
function instanceOfMTNOriginatorConsumer(value) {
    return true;
}
exports.instanceOfMTNOriginatorConsumer = instanceOfMTNOriginatorConsumer;
function MTNOriginatorConsumerFromJSON(json) {
    return MTNOriginatorConsumerFromJSONTyped(json, false);
}
exports.MTNOriginatorConsumerFromJSON = MTNOriginatorConsumerFromJSON;
function MTNOriginatorConsumerFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'accountAlias': json['accountAlias'] == null ? undefined : json['accountAlias'],
        'cryptoAddress': json['cryptoAddress'] == null ? undefined : (0, MTNCryptoAddressRiskScore_1.MTNCryptoAddressRiskScoreFromJSON)(json['cryptoAddress']),
    };
}
exports.MTNOriginatorConsumerFromJSONTyped = MTNOriginatorConsumerFromJSONTyped;
function MTNOriginatorConsumerToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        'accountAlias': value['accountAlias'],
        'cryptoAddress': (0, MTNCryptoAddressRiskScore_1.MTNCryptoAddressRiskScoreToJSON)(value['cryptoAddress']),
    };
}
exports.MTNOriginatorConsumerToJSON = MTNOriginatorConsumerToJSON;
//# sourceMappingURL=MTNOriginatorConsumer.js.map
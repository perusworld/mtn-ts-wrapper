/**
 * Mastercard Multi Token Network API
 * MTN (Multi Token Network) API is for customers and their consumers to - create account - buy/sell/hold cryptos - resolve alias and addresses - mint/transfer/burn tokenized deposits on blockchain
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { MTNConsumer } from './MTNConsumer';
import type { MTNStatusReasonInformation } from './MTNStatusReasonInformation';
/**
 *
 * @export
 * @interface MTNAccountResolution
 */
export interface MTNAccountResolution {
    /**
     * Unique id for alias lookup request.
     * @type {string}
     * @memberof MTNAccountResolution
     */
    requestId?: string;
    /**
     *
     * @type {MTNConsumer}
     * @memberof MTNAccountResolution
     */
    originator?: MTNConsumer;
    /**
     *
     * @type {MTNConsumer}
     * @memberof MTNAccountResolution
     */
    beneficiary?: MTNConsumer;
    /**
     * Quantity of Asset for the Account Resolution request, such as the quantity of BTC to be transferred.
     * @type {number}
     * @memberof MTNAccountResolution
     */
    quantity?: number;
    /**
     * The status of an Alias Resolution request.
     * @type {string}
     * @memberof MTNAccountResolution
     */
    status?: string;
    /**
     * Status reasons.
     * @type {Array<MTNStatusReasonInformation>}
     * @memberof MTNAccountResolution
     */
    statusReasonInformation?: Array<MTNStatusReasonInformation>;
    /**
     * The hash of a blockchain.
     * @type {string}
     * @memberof MTNAccountResolution
     */
    blockchainTxnHash?: string;
    /**
     * The flag to show whether travel rule is required. Default - False.
     * @type {boolean}
     * @memberof MTNAccountResolution
     */
    travelRuleRequired?: boolean;
    /**
     * The transfer identifier received from CipherTrace.
     * @type {string}
     * @memberof MTNAccountResolution
     */
    readonly travelRuleTransferId?: string;
    /**
     * Creation datetime in ISO8601 format
     * @type {Date}
     * @memberof MTNAccountResolution
     */
    readonly createdDate?: Date;
    /**
     * Last updated datetime in ISO8601 format
     * @type {Date}
     * @memberof MTNAccountResolution
     */
    readonly updatedDate?: Date;
}
/**
 * Check if a given object implements the MTNAccountResolution interface.
 */
export declare function instanceOfMTNAccountResolution(value: object): boolean;
export declare function MTNAccountResolutionFromJSON(json: any): MTNAccountResolution;
export declare function MTNAccountResolutionFromJSONTyped(json: any, ignoreDiscriminator: boolean): MTNAccountResolution;
export declare function MTNAccountResolutionToJSON(value?: Omit<MTNAccountResolution, 'travelRuleTransferId' | 'createdDate' | 'updatedDate'> | null): any;

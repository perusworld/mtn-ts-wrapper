"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Mastercard Multi Token Network API
 * MTN (Multi Token Network) API is for customers and their consumers to - create account - buy/sell/hold cryptos - resolve alias and addresses - mint/transfer/burn tokenized deposits on blockchain
 *
 * The version of the OpenAPI document: 0.0.2
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MTNPersonToJSON = exports.MTNPersonFromJSONTyped = exports.MTNPersonFromJSON = exports.instanceOfMTNPerson = void 0;
const MTNDateAndPlaceOfBirth_1 = require("./MTNDateAndPlaceOfBirth");
const MTNGeographicAddress_1 = require("./MTNGeographicAddress");
const MTNNationalIdentification_1 = require("./MTNNationalIdentification");
const MTNNaturalPerson_1 = require("./MTNNaturalPerson");
/**
 * Check if a given object implements the MTNPerson interface.
 */
function instanceOfMTNPerson(value) {
    return true;
}
exports.instanceOfMTNPerson = instanceOfMTNPerson;
function MTNPersonFromJSON(json) {
    return MTNPersonFromJSONTyped(json, false);
}
exports.MTNPersonFromJSON = MTNPersonFromJSON;
function MTNPersonFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'naturalPerson': json['naturalPerson'] == null ? undefined : (0, MTNNaturalPerson_1.MTNNaturalPersonFromJSON)(json['naturalPerson']),
        'geographicAddresses': json['geographicAddresses'] == null ? undefined : (json['geographicAddresses'].map(MTNGeographicAddress_1.MTNGeographicAddressFromJSON)),
        'nationalIdentification': json['nationalIdentification'] == null ? undefined : (0, MTNNationalIdentification_1.MTNNationalIdentificationFromJSON)(json['nationalIdentification']),
        'dateAndPlaceOfBirth': json['dateAndPlaceOfBirth'] == null ? undefined : (0, MTNDateAndPlaceOfBirth_1.MTNDateAndPlaceOfBirthFromJSON)(json['dateAndPlaceOfBirth']),
        'countryOfResidence': json['countryOfResidence'] == null ? undefined : json['countryOfResidence'],
    };
}
exports.MTNPersonFromJSONTyped = MTNPersonFromJSONTyped;
function MTNPersonToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        'naturalPerson': (0, MTNNaturalPerson_1.MTNNaturalPersonToJSON)(value['naturalPerson']),
        'geographicAddresses': value['geographicAddresses'] == null ? undefined : (value['geographicAddresses'].map(MTNGeographicAddress_1.MTNGeographicAddressToJSON)),
        'nationalIdentification': (0, MTNNationalIdentification_1.MTNNationalIdentificationToJSON)(value['nationalIdentification']),
        'dateAndPlaceOfBirth': (0, MTNDateAndPlaceOfBirth_1.MTNDateAndPlaceOfBirthToJSON)(value['dateAndPlaceOfBirth']),
        'countryOfResidence': value['countryOfResidence'],
    };
}
exports.MTNPersonToJSON = MTNPersonToJSON;
//# sourceMappingURL=MTNPerson.js.map
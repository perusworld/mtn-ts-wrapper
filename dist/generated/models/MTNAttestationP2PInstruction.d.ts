/**
 * Mastercard Multi Token Network API
 * MTN (Multi Token Network) API is for customers and their consumers to - create account - buy/sell/hold cryptos - resolve alias and addresses - mint/transfer/burn tokenized deposits on blockchain
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { MTNAttestationBeneficiaryConsumer } from './MTNAttestationBeneficiaryConsumer';
import type { MTNOriginatorConsumer } from './MTNOriginatorConsumer';
import type { MTNP2PInstruction } from './MTNP2PInstruction';
import type { MTNP2PWeb3Data } from './MTNP2PWeb3Data';
/**
 * A basic Peer to Peer POST payload
 * @export
 * @interface MTNAttestationP2PInstruction
 */
export interface MTNAttestationP2PInstruction extends MTNP2PInstruction {
    /**
     *
     * @type {MTNOriginatorConsumer}
     * @memberof MTNAttestationP2PInstruction
     */
    originator?: MTNOriginatorConsumer;
    /**
     *
     * @type {MTNAttestationBeneficiaryConsumer}
     * @memberof MTNAttestationP2PInstruction
     */
    beneficiary?: MTNAttestationBeneficiaryConsumer;
    /**
     *
     * @type {MTNP2PWeb3Data}
     * @memberof MTNAttestationP2PInstruction
     */
    web3?: MTNP2PWeb3Data;
    /**
     * The activity name of the specific attestation.
     * @type {string}
     * @memberof MTNAttestationP2PInstruction
     */
    activity?: string;
    /**
     * The digital signature of the specific attestation.
     * @type {string}
     * @memberof MTNAttestationP2PInstruction
     */
    attestationData?: string;
    /**
     * The flag to show whether travel rule is required. Default - False.
     * @type {boolean}
     * @memberof MTNAttestationP2PInstruction
     */
    travelRuleRequired?: boolean;
}
/**
 * Check if a given object implements the MTNAttestationP2PInstruction interface.
 */
export declare function instanceOfMTNAttestationP2PInstruction(value: object): boolean;
export declare function MTNAttestationP2PInstructionFromJSON(json: any): MTNAttestationP2PInstruction;
export declare function MTNAttestationP2PInstructionFromJSONTyped(json: any, ignoreDiscriminator: boolean): MTNAttestationP2PInstruction;
export declare function MTNAttestationP2PInstructionToJSON(value?: Omit<MTNAttestationP2PInstruction, 'travelRuleExchangeId' | 'createdDate' | 'updatedDate'> | null): any;
